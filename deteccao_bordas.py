# -*- coding: utf-8 -*-
"""8. Morfologia + detecção de bordas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11YxZvBNYaxHwZd26X7OdLme731ee5mhx
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
import cv2
# %matplotlib inline

imagem = cv2.imread('/content/drive/MyDrive/Colab Notebooks/Visão Computacional/imagens/moedas.jpg')
imagem_normal = cv2.cvtColor(imagem,cv2.COLOR_BGR2RGB)
imagem = cv2.cvtColor(imagem,cv2.COLOR_RGB2GRAY)
plt.imshow(imagem,cmap='gray')

kernel = np.ones((5,5),np.uint8)
cinza = cv2.GaussianBlur(imagem,(9,9),0)
cinza = cv2.morphologyEx(cinza,cv2.MORPH_OPEN,kernel)
plt.imshow(cinza,cmap='gray')

im_bin = cv2.threshold(cinza,145,255,cv2.THRESH_BINARY)[1]
im_bin = cv2.morphologyEx(im_bin,cv2.MORPH_CLOSE,kernel)
plt.imshow(im_bin,cmap='gray')

canny = cv2.Canny(im_bin,100,200)
plt.imshow(canny,cmap='gray')

im_copy = np.copy(imagem_normal)

circles = cv2.HoughCircles(canny,
                           cv2.HOUGH_GRADIENT,
                           dp = 1,
                           minDist=30,
                           param1=30,
                           param2=10,
                           minRadius=15,
                           maxRadius=50
                           )
circles = np.uint16(np.around(circles))

for i in circles[0,:]:
    cv2.circle(im_copy,(i[0],i[1]),i[2],(0,255,0),2)
    cv2.circle(im_copy,(i[0],i[1]),2,(0,0,255),3)

plt.imshow(im_copy)
print('Forma dos círculos: ',circles.shape)